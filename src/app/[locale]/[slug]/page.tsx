import type { Metadata } from "next";
import { componentMap } from "../../componentMap";
import { fetchAllPages, fetchPage } from "@/contentful/getPageData";
import { locales } from "@/app/i18n/settings";
import { notFound } from "next/navigation";

export const metadata: Metadata = {
  // TODO Update metadata according to the page
  title: "Create Next App",
  description: "Generated by create next app",
};

export async function generateStaticParams() {
  const pagesPerLocale = locales
    ? await Promise.all(locales.map((locale) => fetchAllPages(locale)))
    : [];

  // If const dataPerLocale is empty, return an empty array
  if (!pagesPerLocale) {
    // TODO take care of not founds
    return notFound();
  }

  const paths = pagesPerLocale
    .map((pages, index) => {
      return pages?.map((page) => {
        return {
          slug: page.slug,
          locale: locales[index],
        };
      });
    })
    .flat(); // flat turns 2d arrays into 1, I can use flatMap too

  return paths;
}

export default async function Page({ params }: any) {
  const page = await fetchPage(params.slug, params.locale);

  const RenderComponent = ({ component }: any) => {
    const Component = componentMap[component._type];

    if (!Component) {
      return null;
    }

    return <Component {...component} />;
  };

  return (
    <div>
      {page &&
        page.content.map((component, index) => (
          <RenderComponent key={index} component={component} />
        ))}
    </div>
  );
}
